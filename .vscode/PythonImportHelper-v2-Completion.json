[
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "AuthenticationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "default_token_generator",
        "importPath": "django.contrib.auth.tokens",
        "description": "django.contrib.auth.tokens",
        "isExtraImport": true,
        "detail": "django.contrib.auth.tokens",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_encode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_decode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "force_bytes",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "EmailMultiAlternatives",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "EmailMultiAlternatives",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "dj_database_url",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "environ",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "environ",
        "description": "environ",
        "detail": "environ",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "Post",
        "importPath": "posts.models",
        "description": "posts.models",
        "isExtraImport": true,
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "posts.models",
        "description": "posts.models",
        "isExtraImport": true,
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "UserAccountModel",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "UserAccountModel",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "HttpResponseForbidden",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseBadRequest",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "ProfilePictureForm",
        "importPath": "accounts.forms",
        "description": "accounts.forms",
        "isExtraImport": true,
        "detail": "accounts.forms",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0001_initial",
        "description": "accounts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserAccountModel',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "accounts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0002_remove_useraccountmodel_image_and_more",
        "description": "accounts.migrations.0002_remove_useraccountmodel_image_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='useraccountmodel',\n            name='image',\n        ),\n        migrations.RemoveField(",
        "detail": "accounts.migrations.0002_remove_useraccountmodel_image_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0003_useraccountmodel_profile_picture",
        "description": "accounts.migrations.0003_useraccountmodel_profile_picture",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0002_remove_useraccountmodel_image_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='useraccountmodel',\n            name='profile_picture',\n            field=models.ImageField(blank=True, null=True, upload_to='profile_picture/'),\n        ),",
        "detail": "accounts.migrations.0003_useraccountmodel_profile_picture",
        "documentation": {}
    },
    {
        "label": "AccountsConfig",
        "kind": 6,
        "importPath": "accounts.apps",
        "description": "accounts.apps",
        "peekOfCode": "class AccountsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'accounts'",
        "detail": "accounts.apps",
        "documentation": {}
    },
    {
        "label": "RegistrationForm",
        "kind": 6,
        "importPath": "accounts.forms",
        "description": "accounts.forms",
        "peekOfCode": "class RegistrationForm(UserCreationForm):\n    first_name = forms.CharField(widget=forms.TextInput(attrs={'id' : 'required'}))\n    last_name = forms.CharField(widget=forms.TextInput(attrs={'id' : 'required'}))\n    user_category = forms.ChoiceField(choices=[('', 'Select User Category'), ('admin', 'Admin'), ('author', 'Author'), ('reader', 'Reader')],\n                                      widget=forms.Select(attrs={'id': 'required'}))\n    profile_picture = forms.ImageField(required=False)\n    class Meta:\n        model = User\n        fields = ['username', 'first_name', 'last_name', 'email', 'password1', 'password2', 'user_category', 'profile_picture']\nclass ProfilePictureForm(forms.ModelForm):",
        "detail": "accounts.forms",
        "documentation": {}
    },
    {
        "label": "ProfilePictureForm",
        "kind": 6,
        "importPath": "accounts.forms",
        "description": "accounts.forms",
        "peekOfCode": "class ProfilePictureForm(forms.ModelForm):\n    class Meta:\n        model = UserAccountModel\n        fields = ['profile_picture']",
        "detail": "accounts.forms",
        "documentation": {}
    },
    {
        "label": "UserAccountModel",
        "kind": 6,
        "importPath": "accounts.models",
        "description": "accounts.models",
        "peekOfCode": "class UserAccountModel(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    user_category = models.CharField(max_length=10, choices=USER_CATEGORIES, null=True, blank=True)\n    profile_picture = models.ImageField(upload_to=\"profile_picture/\", null=True, blank=True)\n    def __str__(self):\n        return f\"{self.user.first_name} {self.user.last_name} - {self.user_category}\"",
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "USER_CATEGORIES",
        "kind": 5,
        "importPath": "accounts.models",
        "description": "accounts.models",
        "peekOfCode": "USER_CATEGORIES = [\n        ('admin', 'Admin'),\n        ('author', 'Author'),\n        ('reader', 'Reader'),\n    ]\nclass UserAccountModel(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    user_category = models.CharField(max_length=10, choices=USER_CATEGORIES, null=True, blank=True)\n    profile_picture = models.ImageField(upload_to=\"profile_picture/\", null=True, blank=True)\n    def __str__(self):",
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "accounts.urls",
        "description": "accounts.urls",
        "peekOfCode": "urlpatterns = [\n    path('register/', views.register, name='register'),\n    path('active/<uid64>/<token>/', views.activate, name = 'activate'),\n    path('login/', views.user_login, name='login'),\n    path('logout/', views.user_logout, name='logout'),\n    path('contact/', views.ContactView.as_view(), name='contact_us'),\n]",
        "detail": "accounts.urls",
        "documentation": {}
    },
    {
        "label": "ContactView",
        "kind": 6,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "class ContactView(TemplateView):\n    template_name = 'contact.html'",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def register(request):\n    if request.method == 'POST':\n        register_form = RegistrationForm(request.POST)\n        if register_form.is_valid():\n            user = register_form.save(commit=False)\n            user.is_active=False\n            user.save()\n            #saving user category\n            user_category = register_form.cleaned_data['user_category']\n            UserAccountModel.objects.create(user=user, user_category=user_category, profile_picture=request.FILES.get('profile_picture'))",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "activate",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def activate(request, uid64, token):\n    try:\n        uid = urlsafe_base64_decode(uid64).decode()\n        user = User._default_manager.get(pk=uid)\n    except(User.DoesNotExist):\n        user = None \n    if user is not None and default_token_generator.check_token(user, token):\n        user.is_active = True\n        user.save()\n        return redirect('login')",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "user_login",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def user_login(request):\n    if request.method == 'POST':\n        form = AuthenticationForm(request, request.POST)\n        if form.is_valid():\n            user_name = form.cleaned_data['username']\n            user_pass = form.cleaned_data['password']\n            user = authenticate(username=user_name, password=user_pass)\n            if user:\n                token, _ = Token.objects.get_or_create(user=user)\n                print(token)",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "user_logout",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def user_logout(request):\n    if request.user.is_authenticated:\n        User = get_user_model()\n        try:\n            # Check if the user has an associated auth_token\n            auth_token = request.user.auth_token\n            auth_token.delete()\n        except User.auth_token.RelatedObjectDoesNotExist:\n            pass  # No auth_token associated with the user\n        logout(request)",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "kolom.asgi",
        "description": "kolom.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "kolom.asgi",
        "documentation": {}
    },
    {
        "label": "env",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "env = environ.Env()\nenviron.Env.read_env()\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n# Your secret key\nSECRET_KEY = env(\"SECRET_KEY\")\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\n# SECRET_KEY = 'django-insecure-e7)cy8ii$+0cf8i7=w9y@bj+z&3@x9o2x1meeb2zc2fa43#_l0'",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Your secret key\nSECRET_KEY = env(\"SECRET_KEY\")\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\n# SECRET_KEY = 'django-insecure-e7)cy8ii$+0cf8i7=w9y@bj+z&3@x9o2x1meeb2zc2fa43#_l0'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "SECRET_KEY = env(\"SECRET_KEY\")\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\n# SECRET_KEY = 'django-insecure-e7)cy8ii$+0cf8i7=w9y@bj+z&3@x9o2x1meeb2zc2fa43#_l0'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\nCSRF_TRUSTED_ORIGINS = ['https://kolom-blog.onrender.com','https://*.127.0.0.1']\n# Application definition",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"*\"]\nCSRF_TRUSTED_ORIGINS = ['https://kolom-blog.onrender.com','https://*.127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\nCSRF_TRUSTED_ORIGINS = ['https://kolom-blog.onrender.com','https://*.127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = ['https://kolom-blog.onrender.com','https://*.127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'rest_framework.authtoken',\n    \"crispy_forms\",",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_ALLOWED_TEMPLATE_PACKS",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "CRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = \"bootstrap5\"\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'kolom.urls'",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "ROOT_URLCONF = 'kolom.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "WSGI_APPLICATION = 'kolom.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n# DATABASES = {\n#     'default': {\n#         'ENGINE': 'django.db.backends.sqlite3',\n#         'NAME': BASE_DIR / 'db.sqlite3',\n#     }\n# }\nDATABASES = {",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "DATABASES = {\n    'default': dj_database_url.config(\n        # Feel free to alter this value to suit your needs.\n        default='postgres://thefairyland_user:6XQZlN1Q6zLdmBwCQXcyQeKA6y9qrY9c@dpg-cm9heuvqd2ns73dq4d80-a.oregon-postgres.render.com/thefairyland',\n    )\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR/'static',\n]",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR/'static',\n]\n# Default primary key field type",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR/'static',\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR/'static',\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    BASE_DIR/'static',\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL ='/media/'\nMEDIA_ROOT = BASE_DIR/'uploads'\nEMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR/'static',\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL ='/media/'\nMEDIA_ROOT = BASE_DIR/'uploads'\nEMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST='smtp.gmail.com'",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL ='/media/'\nMEDIA_ROOT = BASE_DIR/'uploads'\nEMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST='smtp.gmail.com'\nEMAIL_USE_TLS=True\nEMAIL_PORT=587\nEMAIL_HOST_USER=env(\"EMAIL\")\nEMAIL_HOST_PASSWORD=env(\"EMAIL_PASSWORD\")",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "kolom.settings",
        "description": "kolom.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR/'uploads'\nEMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST='smtp.gmail.com'\nEMAIL_USE_TLS=True\nEMAIL_PORT=587\nEMAIL_HOST_USER=env(\"EMAIL\")\nEMAIL_HOST_PASSWORD=env(\"EMAIL_PASSWORD\")",
        "detail": "kolom.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "kolom.urls",
        "description": "kolom.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', Home.as_view(), name='home'),\n    path('blogs/', Blogs.as_view(), name='blogs'),\n    path('blogs', Blogs.as_view(), name='post_list'),\n    path('category/<slug:category_slug>/', Blogs.as_view(), name='home_category'),\n    path('accounts/', include('accounts.urls')),\n    path('posts/', include('posts.urls')),\n]\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "kolom.urls",
        "documentation": {}
    },
    {
        "label": "Home",
        "kind": 6,
        "importPath": "kolom.views",
        "description": "kolom.views",
        "peekOfCode": "class Home(TemplateView):\n    template_name = 'home.html'\nclass Blogs(View):\n    def get(self, request, category_slug=None):\n        posts = Post.objects.all()\n        if category_slug:\n            category = Category.objects.get(slug=category_slug)\n            posts = posts.filter(category=category)\n        categories = Category.objects.all()\n        # add search query",
        "detail": "kolom.views",
        "documentation": {}
    },
    {
        "label": "Blogs",
        "kind": 6,
        "importPath": "kolom.views",
        "description": "kolom.views",
        "peekOfCode": "class Blogs(View):\n    def get(self, request, category_slug=None):\n        posts = Post.objects.all()\n        if category_slug:\n            category = Category.objects.get(slug=category_slug)\n            posts = posts.filter(category=category)\n        categories = Category.objects.all()\n        # add search query\n        search_query = request.GET.get('q', '')\n        category_filter = request.GET.get('category', '')",
        "detail": "kolom.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "kolom.wsgi",
        "description": "kolom.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "kolom.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "posts.migrations.0001_initial",
        "description": "posts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "posts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "posts.migrations.0002_comment_post_comments",
        "description": "posts.migrations.0002_comment_post_comments",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('posts', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Comment',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "posts.migrations.0002_comment_post_comments",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "posts.migrations.0003_remove_post_comments_comment_post",
        "description": "posts.migrations.0003_remove_post_comments_comment_post",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('posts', '0002_comment_post_comments'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='post',\n            name='comments',\n        ),\n        migrations.AddField(",
        "detail": "posts.migrations.0003_remove_post_comments_comment_post",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "posts.migrations.0004_alter_post_author",
        "description": "posts.migrations.0004_alter_post_author",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('posts', '0003_remove_post_comments_comment_post'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='post',\n            name='author',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL),",
        "detail": "posts.migrations.0004_alter_post_author",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "posts.migrations.0005_alter_post_author",
        "description": "posts.migrations.0005_alter_post_author",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('posts', '0004_alter_post_author'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='post',\n            name='author',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_name', to=settings.AUTH_USER_MODEL),",
        "detail": "posts.migrations.0005_alter_post_author",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "posts.migrations.0006_alter_post_author",
        "description": "posts.migrations.0006_alter_post_author",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0003_useraccountmodel_profile_picture'),\n        ('posts', '0005_alter_post_author'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='post',\n            name='author',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to='accounts.useraccountmodel'),",
        "detail": "posts.migrations.0006_alter_post_author",
        "documentation": {}
    },
    {
        "label": "CategoryAdmin",
        "kind": 6,
        "importPath": "posts.admin",
        "description": "posts.admin",
        "peekOfCode": "class CategoryAdmin(admin.ModelAdmin):\n    list_display = ['name', 'slug']\n    prepopulated_fields = {\"slug\": (\"name\",)}\nadmin.site.register(Category, CategoryAdmin)\nadmin.site.register(Post)\nadmin.site.register(Library)\nadmin.site.register(Comment)",
        "detail": "posts.admin",
        "documentation": {}
    },
    {
        "label": "PostsConfig",
        "kind": 6,
        "importPath": "posts.apps",
        "description": "posts.apps",
        "peekOfCode": "class PostsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'posts'",
        "detail": "posts.apps",
        "documentation": {}
    },
    {
        "label": "PostForm",
        "kind": 6,
        "importPath": "posts.forms",
        "description": "posts.forms",
        "peekOfCode": "class PostForm(forms.ModelForm):\n    class Meta:\n        model = Post\n        fields = ['title', 'image', 'body', 'category']\nclass CommentForm(forms.ModelForm):\n    class Meta:\n        model = Comment\n        fields = ['name', 'email', 'text']",
        "detail": "posts.forms",
        "documentation": {}
    },
    {
        "label": "CommentForm",
        "kind": 6,
        "importPath": "posts.forms",
        "description": "posts.forms",
        "peekOfCode": "class CommentForm(forms.ModelForm):\n    class Meta:\n        model = Comment\n        fields = ['name', 'email', 'text']",
        "detail": "posts.forms",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "posts.models",
        "description": "posts.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=150)\n    slug = models.SlugField()\n    def __str__(self):\n        return self.name\nclass Post(models.Model):\n    title = models.CharField(max_length=150)\n    image = models.ImageField(upload_to=\"posts/photos\")\n    body = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "Post",
        "kind": 6,
        "importPath": "posts.models",
        "description": "posts.models",
        "peekOfCode": "class Post(models.Model):\n    title = models.CharField(max_length=150)\n    image = models.ImageField(upload_to=\"posts/photos\")\n    body = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    # author = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"author_name\")\n    author = models.ForeignKey(UserAccountModel, on_delete=models.CASCADE, related_name=\"author\")\n    category = models.ManyToManyField(Category)\n    save_post = models.BooleanField(default=False, null=True, blank=True)\n    def __str__(self) -> str:",
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "Library",
        "kind": 6,
        "importPath": "posts.models",
        "description": "posts.models",
        "peekOfCode": "class Library(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    saved_posts = models.ManyToManyField(Post, related_name='saved_posts')\n    def __str__(self) -> str:\n        return f\"{self.user.first_name} {self.user.last_name}\"\n    @property\n    def saved_post_titles(self):\n        return self.saved_posts.values_list('title', flat=True)\nclass Comment(models.Model):\n    post = models.ForeignKey(Post, on_delete=models.CASCADE, related_name='comments', null=True)",
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "kind": 6,
        "importPath": "posts.models",
        "description": "posts.models",
        "peekOfCode": "class Comment(models.Model):\n    post = models.ForeignKey(Post, on_delete=models.CASCADE, related_name='comments', null=True)\n    name = models.CharField(max_length=100)\n    email = models.EmailField()\n    text = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"{self.name} - {self.text[:50]}\"",
        "detail": "posts.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "posts.urls",
        "description": "posts.urls",
        "peekOfCode": "urlpatterns = [\n    # path('', PostListView.as_view(), name='post_list'),\n    path('post/<int:pk>/', PostDetailView.as_view(), name='post_detail'),\n    path('save_post/<int:pk>/', save_post, name='save_post'),\n    path('library/', LibraryView.as_view(), name='library'),\n    path('profile/', ProfileView.as_view(), name='profile'),\n    path('create_post/', create_post, name='create_post'),\n    path('edit_post/<int:pk>/', edit_post, name='edit_post'),\n    path('delete_post/<int:pk>/', delete_post, name='delete_post'),\n]",
        "detail": "posts.urls",
        "documentation": {}
    },
    {
        "label": "PostDetailView",
        "kind": 6,
        "importPath": "posts.views",
        "description": "posts.views",
        "peekOfCode": "class PostDetailView(View):\n    def get(self, request, pk):\n        post = get_object_or_404(Post, pk=pk)\n        comments = post.comments.all()\n        total_comments = comments.count()\n        form = CommentForm()  #CommentForm\n        return render(request, 'post_detail.html', {'post': post, 'comments': comments, 'total_comments': total_comments, 'form': form})\n    def post(self, request, pk):\n        post = get_object_or_404(Post, pk=pk)\n        comments = Comment.objects.filter(post=post)",
        "detail": "posts.views",
        "documentation": {}
    },
    {
        "label": "LibraryView",
        "kind": 6,
        "importPath": "posts.views",
        "description": "posts.views",
        "peekOfCode": "class LibraryView(View):\n    def get(self, request):\n        library, created = Library.objects.get_or_create(user=request.user)\n        saved_posts = library.saved_posts.all()\n        return render(request, 'library.html', {'saved_posts': saved_posts})\n    def post(self, request):\n        post_id = request.POST.get('post_id') \n        if post_id:\n            post = Post.objects.get(pk=post_id)\n            library, created = Library.objects.get_or_create(user=request.user)",
        "detail": "posts.views",
        "documentation": {}
    },
    {
        "label": "ProfileView",
        "kind": 6,
        "importPath": "posts.views",
        "description": "posts.views",
        "peekOfCode": "class ProfileView(View):\n    def get(self, request):\n        user = request.user\n        user_account = UserAccountModel.objects.get(user=user)\n        profile_picture_form = ProfilePictureForm(instance=user_account)\n        return render(request, 'profile.html', {'user': user, 'user_account': user_account, 'profile_picture_form': profile_picture_form})\n    def post(self, request):\n        user = request.user\n        user_account = UserAccountModel.objects.get(user=user)\n        profile_picture_form = ProfilePictureForm(request.POST, request.FILES, instance=user_account)",
        "detail": "posts.views",
        "documentation": {}
    },
    {
        "label": "save_post",
        "kind": 2,
        "importPath": "posts.views",
        "description": "posts.views",
        "peekOfCode": "def save_post(request, pk):\n    post = get_object_or_404(Post, pk=pk)\n    library = Library.objects.get_or_create(user=request.user)[0]\n    library.saved_posts.add(post)\n    if request.user.is_authenticated:\n        # Email sending\n        email_subject = \"Post Saved Confirmation\"\n        email_body = render_to_string('post_save_email.html', {'post': post, 'user': request.user})\n        user_email = request.user.email\n        print(user_email)",
        "detail": "posts.views",
        "documentation": {}
    },
    {
        "label": "create_post",
        "kind": 2,
        "importPath": "posts.views",
        "description": "posts.views",
        "peekOfCode": "def create_post(request):\n    if request.method == 'POST':\n        form = PostForm(request.POST, request.FILES)\n        if form.is_valid():\n            post = form.save(commit=False)\n            # Ensure the user is logged in before accessing useraccountmodel\n            if request.user.is_authenticated:\n                user_account, created = UserAccountModel.objects.get_or_create(user=request.user)\n                post.author = user_account\n            else:",
        "detail": "posts.views",
        "documentation": {}
    },
    {
        "label": "edit_post",
        "kind": 2,
        "importPath": "posts.views",
        "description": "posts.views",
        "peekOfCode": "def edit_post(request, pk):\n    post = get_object_or_404(Post, pk=pk)\n    if request.user != post.author:\n        return HttpResponseForbidden(\"You don't have permission to edit this post.\")\n    if request.method == 'POST':\n        form = PostForm(request.POST, request.FILES, instance=post)\n        if form.is_valid():\n            form.save()\n            messages.success(request, 'Post edited successfully.')\n            return redirect('post_detail', pk=post.pk)",
        "detail": "posts.views",
        "documentation": {}
    },
    {
        "label": "delete_post",
        "kind": 2,
        "importPath": "posts.views",
        "description": "posts.views",
        "peekOfCode": "def delete_post(request, pk):\n    post = get_object_or_404(Post, pk=pk)\n    # Check if the logged-in user is the author of the post\n    if post.author == request.user:\n        post.delete()\n        messages.success(request, 'Post deleted successfully.')\n    else:\n        return HttpResponseForbidden(\"You don't have permission to delete this post.\")\n    return redirect('post_list')",
        "detail": "posts.views",
        "documentation": {}
    },
    {
        "label": "SearchFilterConfig",
        "kind": 6,
        "importPath": "search_filter.apps",
        "description": "search_filter.apps",
        "peekOfCode": "class SearchFilterConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'search_filter'",
        "detail": "search_filter.apps",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'kolom.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]